services:
  - type: web
    name: backdoor-gmail-tool
    env: python
    buildCommand: |
      # Make sure we're in the right directory
      echo "Current directory: $(pwd)"
      
      # Install system dependencies required for VNC
      echo "Installing system dependencies..."
      apt-get update -y || true
      apt-get install -y x11vnc xvfb git || true
      
      # Create and activate virtual environment
      python -m venv .venv
      source .venv/bin/activate
      
      # Make sure pip is up to date
      pip install --upgrade pip
      
      # Install critical dependencies explicitly first
      echo "Installing Flask and dependencies..."
      pip install Flask==2.2.5
      pip install flask-cors==4.0.0
      pip install gunicorn==21.2.0
      pip install websockify==0.10.0
      
      # Install Python requirements
      echo "Installing all requirements..."
      pip install -r requirements.txt
      
      # Verify critical dependencies are installed
      echo "Verifying installations..."
      pip list | grep "Flask"
      pip list | grep "gunicorn"
      
      # Install Playwright in user space without requiring root
      export PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/ms-playwright
      
      # Install specific version of Playwright that's known to work well
      pip install playwright==1.38.0
      
      # Install Node.js to help with browser installation (NVM doesn't require root)
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      nvm install 16
      
      # Use Playwright's browser downloader directly
      mkdir -p $HOME/.cache/ms-playwright
      
      # Install the browser in user space without requiring dependencies
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0 python -m playwright install chromium
      
      # Try npm-based installation as a backup approach
      # This downloads just the browser binary, not the dependencies
      npm install -g playwright-core
      npx playwright install chromium
      
      # Create a wrapper script for gunicorn that ensures venv is activated
      echo "#!/bin/bash" > start.sh
      echo "source .venv/bin/activate" >> start.sh
      echo "exec gunicorn --bind 0.0.0.0:\$PORT \"app:create_app()\" --workers 2 --timeout 120" >> start.sh
      chmod +x start.sh
      
      # Path check for debugging
      echo "PATH: $PATH"
      echo "Python path: $(which python)"
      echo "Python version: $(python --version)"
      which gunicorn || echo "gunicorn not found in PATH"
      
      # List all installed packages for debugging
      pip list
    startCommand: ./start.sh
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: SECRET_KEY
        generateValue: true
      - key: PROXY_LIST
        sync: false
      - key: DEFAULT_PROXY_TYPE
        value: http
      - key: RENDER
        value: "true"
      - key: WEBSOCKIFY_PORT
        value: "6080"
    plan: free
    autoDeploy: false
    healthCheckPath: /
    # domains: [] # Optionally, leave empty or omit entirely